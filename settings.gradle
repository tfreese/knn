// Can not be configured by Conventions-Plugin.
pluginManagement {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        mavenLocal()
    }
}

// Without rootProject.name the Name of the Projekt-Directory is used.
//rootProject.name = "knn"

dependencyResolutionManagement {
    repositories {
        mavenCentral()
//        mavenLocal()
        maven {
            url "https://repository.primefaces.org"
            name "primefaces"
            content {
                excludeGroupByRegex("de.freese\\..*")
            }
            mavenContent {
                releasesOnly()
                //snapshotsOnly()
            }
        }
        maven {
            url "https://repo.gradle.org/gradle/libs-releases"
            name "gradle-libs-releases"
            content {
                excludeGroupByRegex("de.freese\\..*")
            }
            mavenContent {
                releasesOnly()
                //snapshotsOnly()
            }
        }

//        flatDir {
//            dirs "libs"
//        }
//
//        ivy {
//            url<URL>
//            name "my-ivy"
//            patternLayout {
//                artifact "app1/[organisation]/jars/[artifact]-[revision].[ext]"
//                artifact "app2/[organisation]/jars/[artifact]-[revision].[ext]"
//            }
//            metadataSources {
//                artifact() // Only look for Jar.
//            }
//            content {
//                excludeGroup "or.orga"
//                excludeGroupByRegex("com\\..*")
//                excludeGroupByRegex "io\\..*"
//                excludeGroupByRegex "jakarta\\..*"
//                excludeGroupByRegex "org\\..*"
//            }
//        }
//
//        // Ivy Dependencies.
//        implementation("app1:artifact:version") // app1/app1/jars/artifact-version.jar
    }
}

include "knn-net"
include "knn-demo"

//buildCache {
//    local {
//        directory = new File("/tmp", "build-cache")
//        removeUnusedEntriesAfterDays = 7
//    }
//}

// init.gradle
//beforeSettings { settings ->
//    settings.caches {
//        cleanup = Cleanup.DEFAULT
//        releasedWrappers.removeUnusedEntriesAfterDays = 7
//        snapshotWrappers.removeUnusedEntriesAfterDays = 7
//        downloadedResources.removeUnusedEntriesAfterDays = 7
//        createdResources.removeUnusedEntriesAfterDays = 7
//    }
//}
